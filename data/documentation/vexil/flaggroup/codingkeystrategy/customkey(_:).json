{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"customKey"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS","macOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/vexil\/flaggroup\/codingkeystrategy\/customkey(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup\/CodingKeyStrategy\/customKey(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Manually specifies the key name for this "},{"type":"codeVoice","code":"FlagGroup"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"customKey"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"title":"FlagGroup.CodingKeyStrategy.customKey(_:)","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:5Vexil9FlagGroupV17CodingKeyStrategyO06customE0yAEyx_GSScAGmAA0B9ContainerRzlF","modules":[{"name":"Vexil"}]},"hierarchy":{"paths":[["doc:\/\/Vexil\/documentation\/Vexil","doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup","doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup\/CodingKeyStrategy"]]},"references":{"doc://Vexil/documentation/Vexil/FlagGroup":{"role":"symbol","title":"FlagGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagGroup"}],"abstract":[{"type":"text","text":"A wrapper representing a group of Feature Flags \/ Feature Toggles."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagGroup"}],"url":"\/documentation\/vexil\/flaggroup"},"doc://Vexil/documentation/Vexil/FlagGroup/CodingKeyStrategy":{"conformance":{"constraints":[{"type":"codeVoice","code":"Group"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FlagContainer"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"FlagGroup.CodingKeyStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeyStrategy"}],"abstract":[{"type":"text","text":"An enumeration describing how the key should be calculated for this specific "},{"type":"codeVoice","code":"FlagGroup"},{"type":"text","text":"."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup\/CodingKeyStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CodingKeyStrategy"}],"url":"\/documentation\/vexil\/flaggroup\/codingkeystrategy"},"doc://Vexil/documentation/Vexil/FlagGroup/CodingKeyStrategy/customKey(_:)":{"role":"symbol","title":"FlagGroup.CodingKeyStrategy.customKey(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"customKey"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Manually specifies the key name for this "},{"type":"codeVoice","code":"FlagGroup"},{"type":"text","text":"."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup\/CodingKeyStrategy\/customKey(_:)","kind":"symbol","type":"topic","url":"\/documentation\/vexil\/flaggroup\/codingkeystrategy\/customkey(_:)"},"doc://Vexil/documentation/Vexil":{"role":"collection","title":"Vexil","abstract":[{"type":"text","text":"Vexil (named for Vexillology) is a Swift package for managing feature flags (also called feature toggles) in a flexible, multi-provider way."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil","kind":"symbol","type":"topic","url":"\/documentation\/vexil"}}}