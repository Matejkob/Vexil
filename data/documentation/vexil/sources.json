{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vexil "},{"type":"codeVoice","code":"FlagPole"},{"type":"text","text":" supports multiple backend flag sources, and ships with the following sources built-in:"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Name"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Description"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UserDefaults"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any "},{"type":"codeVoice","code":"UserDefaults"},{"type":"text","text":" instance automatically conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NSUbiquitousKeyValueStore"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any "},{"type":"codeVoice","code":"NSUbiquitousKeyValueStore"},{"type":"text","text":" instance automatically conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueDictionary"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"A dictionary-style type that conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that is great for testing or other integrations."}]}]],[[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Snapshot"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"All snapshots taken of a FlagPole can be used as a source."}]}]]],"header":"row"},{"anchor":"Initialisation","level":2,"type":"heading","text":"Initialisation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When initialising a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole"},{"type":"text","text":", it will default to a single source: "},{"type":"codeVoice","code":"UserDefaults.standard"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can always be explicit if you want to use a different set of sources:"}]},{"type":"codeListing","syntax":"swift","code":["let source = MyCustomFlagValueSource()","","let pole = FlagPole(hoist: MyFlags.self, sources: [ source ])"]},{"anchor":"Source-hierarchy","level":2,"type":"heading","text":"Source hierarchy"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sources are maintained in an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" on the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole"},{"type":"text","text":", and the order of the array is important – when a flag is accessed it walks the array of sources and returns the first non-nil value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means you can support multiple flag value sources and decide their priority. For example, you might use a remote flag value provider like "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/remote-config"},{"type":"text","text":" but still want to use "},{"type":"reference","isActive":true,"identifier":"Vexillographer.md"},{"type":"text","text":" or the Settings bundle to let support local testers."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Another common usage is to support “Environment”-based Snapshots."}]},{"type":"codeListing","syntax":"swift","code":["let pole = FlagPole (","    hoist: MyFlags.self,","    sources: [","       UserDefaults.standard,\t\t\t\/\/ allow local overrides","       environment.flags,\t\t\t\t\/\/ any flags specific to your environment (eg. dev\/test\/prod)","       MyRemoteFlagProvider()\t\t\t\/\/ remote flags","    ]",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Remember, if all of your sources return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" the Flag’s default value is used."}]},{"anchor":"Updating-sources","level":2,"type":"heading","text":"Updating sources"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Vexil, and "},{"overridingTitleInlineContent":[{"type":"text","text":"Vexillographer"}],"isActive":true,"type":"reference","identifier":"Vexillographer.md","overridingTitle":"Vexillographer"},{"type":"text","text":", also provide a means to update or save flag values into their store using Snapshots."}]},{"type":"codeListing","syntax":"swift","code":["import Vexil","","let flagPole = FlagPole(hoist: AppFlags.self)","","let snapshot = flagPole.emptySnapshot()","snapshot.profile.password.changePassword = false","","\/\/ save that to our user defaults, or any FlagValueSource","flagPole.save(snapshot: snapshot, to: UserDefaults.standard)"]},{"anchor":"Custom-sources","level":2,"type":"heading","text":"Custom sources"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To implement your own source you need only conform to the "},{"type":"codeVoice","code":"FlagPoleSource"},{"type":"text","text":" protocol and implement its two key methods:"}]},{"type":"codeListing","syntax":"swift","code":["public protocol FlagValueSource {","","    \/\/\/ Give the source a name (for Vexillographer)","    var name: String { get }","","    \/\/\/ Provide a way to fetch values","    func flagValue<Value> (key: String) -> Value? where Value: FlagValue","","    \/\/\/ And to save values – if your source does not support saving just do nothing","    func setFlagValue<Value> (_ value: Value?, key: String) throws where Value: FlagValue","","    #if !os(Linux)","","    \/\/\/ If you're running on a platform that supports Combine you can optionally support real-time","    \/\/\/ flag updates","    \/\/\/","    var valuesDidChange: AnyPublisher<Void, Never>? { get }","","    #endif","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See our full guide on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/CustomSources"},{"type":"text","text":" for more."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/vexil\/sources"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Vexil\/documentation\/Vexil\/Sources","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Vexil FlagPole supports multiple backend flag sources. This guide walks through the built-in sources, how a FlagPole determines the source hierarchy and how to manipulate it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Flag Hierarchy","role":"article","modules":[{"name":"Vexil"}]},"hierarchy":{"paths":[["doc:\/\/Vexil\/documentation\/Vexil"]]},"seeAlsoSections":[{"title":"The Flag Pole","identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/FlagPole","doc:\/\/Vexil\/documentation\/Vexil\/VexilConfiguration","doc:\/\/Vexil\/documentation\/Vexil\/FlagPublishing","doc:\/\/Vexil\/documentation\/Vexil\/FlagKeys"],"generated":true}],"references":{"doc://Vexil/documentation/Vexil/FlagKeys":{"role":"article","title":"Flag Keys","abstract":[{"type":"text","text":"An in depth at how Vexil calculates the key for each of its flags, and how you can control that process."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagKeys","kind":"article","type":"topic","url":"\/documentation\/vexil\/flagkeys"},"doc://Vexil/documentation/Vexil/FlagPublishing":{"role":"article","title":"Flag Publishing","abstract":[{"type":"text","text":"Vexil supports real-time updates when flag values change through the use of Combine."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPublishing","kind":"article","type":"topic","url":"\/documentation\/vexil\/flagpublishing"},"Vexillographer.md":{"title":"Vexillographer","titleInlineContent":[{"type":"text","text":"Vexillographer"}],"type":"link","identifier":"Vexillographer.md","url":"Vexillographer.md"},"doc://Vexil/documentation/Vexil/FlagValueDictionary":{"role":"symbol","title":"FlagValueDictionary","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagValueDictionary"}],"abstract":[{"type":"text","text":"A simple dictionary-backed FlagValueSource that can be useful for testing"},{"type":"text","text":" "},{"type":"text","text":"and other purposes."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueDictionary","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagValueDictionary"}],"url":"\/documentation\/vexil\/flagvaluedictionary"},"doc://Vexil/documentation/Vexil/CustomSources":{"role":"article","title":"Creating Custom Flag Value Sources","abstract":[{"type":"text","text":"A basic walkthrough in creating a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"},{"type":"text","text":", using the bundled sources as examples."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/CustomSources","kind":"article","type":"topic","url":"\/documentation\/vexil\/customsources"},"doc://Vexil/documentation/Vexil":{"role":"collection","title":"Vexil","abstract":[{"type":"text","text":"Vexil (named for Vexillology) is a Swift package for managing feature flags (also called feature toggles) in a flexible, multi-provider way."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil","kind":"symbol","type":"topic","url":"\/documentation\/vexil"},"doc://Vexil/documentation/Vexil/FlagPole":{"role":"symbol","title":"FlagPole","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagPole"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"FlagPole"},{"type":"text","text":" hoists a group of feature flags \/ feature toggles."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagPole"}],"url":"\/documentation\/vexil\/flagpole"},"doc://Vexil/documentation/Vexil/Snapshot":{"role":"symbol","title":"Snapshot","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Snapshot"},{"type":"text","text":" serves multiple purposes in Vexil. It is a point-in-time container of flag values, and is also"},{"type":"text","text":" "},{"type":"text","text":"mutable and can be applied \/ saved to a "},{"type":"codeVoice","code":"FlagValueSource"},{"type":"text","text":"."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Snapshot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"url":"\/documentation\/vexil\/snapshot"},"doc://Vexil/documentation/Vexil/VexilConfiguration":{"role":"symbol","title":"VexilConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VexilConfiguration"}],"abstract":[{"type":"text","text":"A configuration struct passed into the "},{"type":"codeVoice","code":"FlagPole"},{"type":"text","text":" to configure it."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/VexilConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VexilConfiguration"}],"url":"\/documentation\/vexil\/vexilconfiguration"},"https://firebase.google.com/docs/remote-config":{"title":"Firebase Remote Config","titleInlineContent":[{"type":"text","text":"Firebase Remote Config"}],"type":"link","identifier":"https:\/\/firebase.google.com\/docs\/remote-config","url":"https:\/\/firebase.google.com\/docs\/remote-config"},"doc://Vexil/documentation/Vexil/FlagValueSource":{"role":"symbol","title":"FlagValueSource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagValueSource"}],"abstract":[{"type":"text","text":"A simple protocol that describes a source of "},{"type":"codeVoice","code":"FlagValue"},{"type":"text","text":"s"}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagValueSource"}],"url":"\/documentation\/vexil\/flagvaluesource"}}}