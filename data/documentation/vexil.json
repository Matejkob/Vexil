{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"vexil.png"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define your flags in a structured tree"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extensible to support any backend flag storage or platform"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Take and apply snapshots of flag states"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Get real-time flag updates using Combine"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Vexillographer: A simple SwiftUI interface for editing flags"}]}]}]},{"anchor":"Defining-Flags","level":3,"type":"heading","text":"Defining Flags"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you’ve ever used "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-argument-parser"},{"type":"text","text":" defining flags in Vexil will be a familiar experience."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Vexil supports a tree of flags, so we need a structure to hold them:"}]},{"type":"codeListing","syntax":"swift","code":["import Vexil","","struct LoginFlags: FlagContainer {","","    @Flag(\"Enables the forgot password button on the login screen and associated flows\")","    var forgotPassword: Bool","","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Side Note:"}]},{"type":"text","text":" Vexil requires descriptions for all of its flags and flag groups. This is used by Vexillographer for providing context for the flags you are enabling\/disabling in the UI, but it also provides context for future developers (especially yourself in 12 months time) as to what flags mean and what their intended use is."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/DefiningFlags"},{"type":"text","text":" to read more"}]},{"anchor":"Checking-flags","level":3,"type":"heading","text":"Checking flags"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To check your flags, you need to run them up a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["import Vexil","","let flagPole = FlagPole(hoist: AppFlags.self)","","\/\/ should we show the change password screen?","if flagPole.profile.password.changePassword {","    \/\/ ...","}"]},{"anchor":"Mutating-flags","level":3,"type":"heading","text":"Mutating flags"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default access to flags on the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole"},{"type":"text","text":" is immutable from your source code. This is a deliberate design decision: flags should not be easily mutable from your app as it can lead to mistakes (eg. "},{"type":"codeVoice","code":"flag = true"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"flag == true"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That said, it is still very easy to mutate any flags if you need to using a snapshot:"}]},{"type":"codeListing","syntax":"swift","code":["import Vexil","","let flagPole = FlagPole(hoist: AppFlags.self)","","var snapshot = flagPole.emptySnapshot()","snapshot.profile.password.changePassword = true","","\/\/ insert it at the top of the hierarchy","flagPole.insert(snapshot: snapshot, at: 0)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more info see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Snapshots"},{"type":"text","text":"."}]},{"anchor":"Flag-Value-Sources","level":2,"type":"heading","text":"Flag Value Sources"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vexil "},{"type":"codeVoice","code":"FlagPole"},{"type":"text","text":" supports multiple backend flag sources, and ships with the following sources built-in:"}]},{"type":"table","rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Name"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Description"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UserDefaults"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any "},{"type":"codeVoice","code":"UserDefaults"},{"type":"text","text":" instance automatically conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Snapshot"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"All snapshots taken of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole"},{"type":"text","text":" can be used as a source."}]}]]],"header":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the full documentation on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/CustomSources"},{"type":"text","text":" for more on working with sources and how to define your own."}]},{"anchor":"Snapshots","level":2,"type":"heading","text":"Snapshots"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Vexil provides a mechanism to mutate, save, load and apply snapshots of flag states and values."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important:"}]},{"type":"text","text":" Snapshots only reflect values and states "},{"type":"emphasis","inlineContent":[{"type":"text","text":"that have been mutated"}]},{"type":"text","text":". That is, a snapshot is only applied to values that have been explicitly set within it. Any values that have not been set will defer to the next source in the list, or the default value. The exception is when you take a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"full snapshot"}]},{"type":"text","text":" of a FlagPole, which captures the value of every flag."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Snapshots are implemented as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"},{"type":"text","text":", so you can easily apply multiple snapshots in a prioritised order."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Snapshots can do a lot. See our "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Snapshots"},{"type":"text","text":" for more."}]},{"anchor":"Creating-snapshots","level":2,"type":"heading","text":"Creating snapshots"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can manually create snapshots and specify which flags are affected:"}]},{"type":"codeListing","syntax":"swift","code":["import Vexil","","\/\/ create an empty snapshot","var snapshot = flagPole.emptySnapshot()","","\/\/ update some values and states","snapshot.login.forgotPassword = false","snapshot.profile.password = false","","\/\/ apply that snapshot - only the two values above will change","flagPole.insert(snapshot: snapshot, at: 0)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also take a snapshot of the current state of your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["import Vexil","","let flagPole = FlagPole(hoist: AppFlags.self)","","\/\/ snapshot the current state - this will get the state of *all* flags","let snapshot = flagPole.snapshot()","","\/\/ save them, mutate them, whatever you like","\/\/ ..."]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/vexil"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Vexil\/documentation\/Vexil","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Vexil (named for Vexillology) is a Swift package for managing feature flags (also called feature toggles) in a flexible, multi-provider way."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Vexil","title":"Vexil","symbolKind":"module","role":"collection","modules":[{"name":"Vexil"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"The Flag Pole","identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/FlagPole","doc:\/\/Vexil\/documentation\/Vexil\/VexilConfiguration","doc:\/\/Vexil\/documentation\/Vexil\/Sources","doc:\/\/Vexil\/documentation\/Vexil\/FlagPublishing","doc:\/\/Vexil\/documentation\/Vexil\/FlagKeys"]},{"title":"Flags","identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/DefiningFlags","doc:\/\/Vexil\/documentation\/Vexil\/Flag","doc:\/\/Vexil\/documentation\/Vexil\/FlagValue"]},{"title":"Flag Groups","identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup","doc:\/\/Vexil\/documentation\/Vexil\/FlagContainer"]},{"title":"Snapshots","identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/Snapshots","doc:\/\/Vexil\/documentation\/Vexil\/Snapshot","doc:\/\/Vexil\/documentation\/Vexil\/MutableFlagGroup"]},{"title":"Sources","abstract":[{"type":"text","text":"Vexil includes support for a number of sources out of the box, including "},{"type":"codeVoice","code":"UserDefaults"},{"type":"text","text":" and "},{"type":"codeVoice","code":"NSUbiquitousKeyValueStore"},{"type":"text","text":". You can also create your own sources by conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"},{"type":"text","text":"."}],"identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/CustomSources","doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource","doc:\/\/Vexil\/documentation\/Vexil\/FlagValueDictionary","doc:\/\/Vexil\/documentation\/Vexil\/BoxedFlagValue"]},{"title":"Supporting Types","identifiers":["doc:\/\/Vexil\/documentation\/Vexil\/FlagDisplayValue","doc:\/\/Vexil\/documentation\/Vexil\/FlagInfo"]}],"references":{"doc://Vexil/documentation/Vexil/FlagGroup":{"role":"symbol","title":"FlagGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagGroup"}],"abstract":[{"type":"text","text":"A wrapper representing a group of Feature Flags \/ Feature Toggles."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagGroup"}],"url":"\/documentation\/vexil\/flaggroup"},"doc://Vexil/documentation/Vexil/FlagContainer":{"role":"symbol","title":"FlagContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagContainer"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"FlagContainer"},{"type":"text","text":" is a type that encapsulates your "},{"type":"codeVoice","code":"Flag"},{"type":"text","text":" and "},{"type":"codeVoice","code":"FlagGroup"},{"type":"text","text":" "},{"type":"text","text":"types. The only requirement of a "},{"type":"codeVoice","code":"FlagContainer"},{"type":"text","text":" is that it can be initialised"},{"type":"text","text":" "},{"type":"text","text":"with an empty "},{"type":"codeVoice","code":"init()"},{"type":"text","text":"."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagContainer"}],"url":"\/documentation\/vexil\/flagcontainer"},"doc://Vexil/documentation/Vexil/Snapshot":{"role":"symbol","title":"Snapshot","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Snapshot"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Snapshot"},{"type":"text","text":" serves multiple purposes in Vexil. It is a point-in-time container of flag values, and is also"},{"type":"text","text":" "},{"type":"text","text":"mutable and can be applied \/ saved to a "},{"type":"codeVoice","code":"FlagValueSource"},{"type":"text","text":"."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Snapshot","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Snapshot"}],"url":"\/documentation\/vexil\/snapshot"},"doc://Vexil/documentation/Vexil/Sources":{"role":"article","title":"Flag Hierarchy","abstract":[{"type":"text","text":"The Vexil FlagPole supports multiple backend flag sources. This guide walks through the built-in sources, how a FlagPole determines the source hierarchy and how to manipulate it."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Sources","kind":"article","type":"topic","url":"\/documentation\/vexil\/sources"},"doc://Vexil/documentation/Vexil/FlagValueDictionary":{"role":"symbol","title":"FlagValueDictionary","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagValueDictionary"}],"abstract":[{"type":"text","text":"A simple dictionary-backed FlagValueSource that can be useful for testing"},{"type":"text","text":" "},{"type":"text","text":"and other purposes."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueDictionary","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagValueDictionary"}],"url":"\/documentation\/vexil\/flagvaluedictionary"},"doc://Vexil/documentation/Vexil/FlagKeys":{"role":"article","title":"Flag Keys","abstract":[{"type":"text","text":"An in depth at how Vexil calculates the key for each of its flags, and how you can control that process."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagKeys","kind":"article","type":"topic","url":"\/documentation\/vexil\/flagkeys"},"doc://Vexil/documentation/Vexil/FlagPole":{"role":"symbol","title":"FlagPole","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagPole"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"FlagPole"},{"type":"text","text":" hoists a group of feature flags \/ feature toggles."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPole","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagPole"}],"url":"\/documentation\/vexil\/flagpole"},"doc://Vexil/documentation/Vexil/FlagValueSource":{"role":"symbol","title":"FlagValueSource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagValueSource"}],"abstract":[{"type":"text","text":"A simple protocol that describes a source of "},{"type":"codeVoice","code":"FlagValue"},{"type":"text","text":"s"}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagValueSource"}],"url":"\/documentation\/vexil\/flagvaluesource"},"doc://Vexil/documentation/Vexil/FlagPublishing":{"role":"article","title":"Flag Publishing","abstract":[{"type":"text","text":"Vexil supports real-time updates when flag values change through the use of Combine."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagPublishing","kind":"article","type":"topic","url":"\/documentation\/vexil\/flagpublishing"},"doc://Vexil/documentation/Vexil/VexilConfiguration":{"role":"symbol","title":"VexilConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VexilConfiguration"}],"abstract":[{"type":"text","text":"A configuration struct passed into the "},{"type":"codeVoice","code":"FlagPole"},{"type":"text","text":" to configure it."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/VexilConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VexilConfiguration"}],"url":"\/documentation\/vexil\/vexilconfiguration"},"doc://Vexil/documentation/Vexil":{"role":"collection","title":"Vexil","abstract":[{"type":"text","text":"Vexil (named for Vexillology) is a Swift package for managing feature flags (also called feature toggles) in a flexible, multi-provider way."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil","kind":"symbol","type":"topic","url":"\/documentation\/vexil"},"doc://Vexil/documentation/Vexil/FlagInfo":{"role":"symbol","title":"FlagInfo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagInfo"}],"abstract":[{"type":"text","text":"A simple collection of information about a "},{"type":"codeVoice","code":"Flag"},{"type":"text","text":" or "},{"type":"codeVoice","code":"FlagGroup"}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagInfo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagInfo"}],"url":"\/documentation\/vexil\/flaginfo"},"doc://Vexil/documentation/Vexil/CustomSources":{"role":"article","title":"Creating Custom Flag Value Sources","abstract":[{"type":"text","text":"A basic walkthrough in creating a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValueSource"},{"type":"text","text":", using the bundled sources as examples."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/CustomSources","kind":"article","type":"topic","url":"\/documentation\/vexil\/customsources"},"https://github.com/apple/swift-argument-parser":{"title":"swift-argument-parser","titleInlineContent":[{"type":"text","text":"swift-argument-parser"}],"type":"link","identifier":"https:\/\/github.com\/apple\/swift-argument-parser","url":"https:\/\/github.com\/apple\/swift-argument-parser"},"doc://Vexil/documentation/Vexil/FlagValue":{"role":"symbol","title":"FlagValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagValue"}],"abstract":[{"type":"text","text":"A type that represents the wrapped value of a "},{"type":"codeVoice","code":"Flag"}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagValue"}],"url":"\/documentation\/vexil\/flagvalue"},"doc://Vexil/documentation/Vexil/DefiningFlags":{"role":"article","title":"Defining Flags","abstract":[{"type":"text","text":"Defining Flags is the cornerstone of Vexil. Learn how to structure your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagContainer"},{"type":"text","text":", use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagGroup"},{"type":"text","text":"s and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Flag"},{"type":"text","text":"s of various types."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/DefiningFlags","kind":"article","type":"topic","url":"\/documentation\/vexil\/definingflags"},"doc://Vexil/documentation/Vexil/MutableFlagGroup":{"role":"symbol","title":"MutableFlagGroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableFlagGroup"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"MutableFlagGroup"},{"type":"text","text":" is a wrapper type that provides a “setter” for each contained "},{"type":"codeVoice","code":"Flag"},{"type":"text","text":"."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/MutableFlagGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutableFlagGroup"}],"url":"\/documentation\/vexil\/mutableflaggroup"},"doc://Vexil/documentation/Vexil/BoxedFlagValue":{"role":"symbol","title":"BoxedFlagValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoxedFlagValue"}],"abstract":[{"type":"text","text":"An intermediate type used to make encoding and decoding of types simpler for "},{"type":"codeVoice","code":"FlagValueSource"},{"type":"text","text":"s"}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/BoxedFlagValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BoxedFlagValue"}],"url":"\/documentation\/vexil\/boxedflagvalue"},"vexil.png":{"alt":"Vexil flag logo","type":"image","identifier":"vexil.png","variants":[{"url":"\/images\/vexil.png","size":{"width":250,"height":250},"traits":["1x","light"]}]},"doc://Vexil/documentation/Vexil/Flag":{"role":"symbol","title":"Flag","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flag"}],"abstract":[{"type":"text","text":"A wrapper representing a Feature Flag \/ Feature Toggle."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Flag","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"url":"\/documentation\/vexil\/flag"},"doc://Vexil/documentation/Vexil/Snapshots":{"role":"article","title":"Snapshots","abstract":[{"type":"text","text":"A tour of Snapshots, which are one of the most versatile features of Vexil."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/Snapshots","kind":"article","type":"topic","url":"\/documentation\/vexil\/snapshots"},"doc://Vexil/documentation/Vexil/FlagDisplayValue":{"role":"symbol","title":"FlagDisplayValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagDisplayValue"}],"abstract":[{"type":"text","text":"A convenience protocol used by flag editors like Vexillographer."}],"identifier":"doc:\/\/Vexil\/documentation\/Vexil\/FlagDisplayValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagDisplayValue"}],"url":"\/documentation\/vexil\/flagdisplayvalue"}}}